from unittest.mock import patch

import pandas as pd
import pytest

from src.services import get_transactions_by_row


@pytest.fixture
def test_df():
    """Фикстура, создающая тестовый DataFrame"""
    test = {
        "Дата операции": [
            "01.12.2021 12:35:05",
            "01.12.2021 13:12:18",
            "01.12.2021 18:50:24",
            "01.12.2021 23:40:34",
            "02.12.2021 14:41:17",
            "02.12.2021 15:18:26",
            "02.12.2021 16:26:02",
            "02.12.2021 21:10:00",
            "02.12.2021 21:44:30",
        ],
        "Номер карты": ["*7197", "*7197", "*7197", "*5091", "*7197", "*7197", "*5091", "*7197", "*5091"],
        "Статус": ["OK", "OK", "OK", "OK", "OK", "OK", "OK", "OK", "OK"],
        "Сумма операции": [-99.00, -199.00, -99.22, -1.07, -15.00, -496.51, -5510.80, -125.00, -10.33],
        "Кэшбэк": [None, None, None, None, None, None, None, None, None],
        "Категория": [
            "Фастфуд",
            "Дом и ремонт",
            "Супермаркеты",
            "Каршеринг",
            "Связь",
            "Супермаркеты",
            "Каршеринг",
            "Фастфуд",
            "Каршеринг",
        ],
        "Описание": [
            "IP Yakubovskaya M.V.",
            "Строитель",
            "Дикси",
            "Ситидрайв",
            "Devajs Servis.",
            "Магнит",
            "Ситидрайв",
            "ЦЕХ",
            "Ситидрайв",
        ],
    }

    return pd.DataFrame(test)


@pytest.mark.parametrize(
    "row, expected",
    [
        (
            "дикси",
            [
                {
                    "Дата операции": "01.12.2021 18:50:24",
                    "Номер карты": "*7197",
                    "Статус": "OK",
                    "Сумма операции": -99.22,
                    "Кэшбэк": None,
                    "Категория": "Супермаркеты",
                    "Описание": "Дикси",
                },
            ],
        ),
        (
            "фастфуд",
            [
                {
                    "Дата операции": "01.12.2021 12:35:05",
                    "Номер карты": "*7197",
                    "Статус": "OK",
                    "Сумма операции": -99.00,
                    "Кэшбэк": None,
                    "Категория": "Фастфуд",
                    "Описание": "IP Yakubovskaya M.V.",
                },
                {
                    "Дата операции": "02.12.2021 21:10:00",
                    "Номер карты": "*7197",
                    "Статус": "OK",
                    "Сумма операции": -125.00,
                    "Кэшбэк": None,
                    "Категория": "Фастфуд",
                    "Описание": "ЦЕХ",
                },
            ],
        ),
        ("вклад", [{}]),
    ],
)
@patch("src.services.pd.read_excel")
def test_get_transactions_by_row(mock_read, test_df, row, expected):
    """Положительный тест на отбор банковских операций по строке поиска,
    в том числе при отсутствии строкы в списке"""
    mock_read.return_value = test_df
    assert list(get_transactions_by_row(mock_read, row)) == expected
