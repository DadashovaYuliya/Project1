import pandas as pd
import pytest

from src.reports import spending_by_category


@pytest.fixture
def test_df():
    """Фикстура, создающая тестовый DataFrame"""
    test = {
        "Дата операции": [
            "01.12.2021 12:35:05",
            "01.12.2021 13:12:18",
            "01.12.2021 18:50:24",
            "01.12.2021 23:40:34",
            "02.12.2021 14:41:17",
            "02.12.2021 15:18:26",
            "02.12.2021 16:26:02",
            "02.12.2021 21:10:00",
            "02.12.2021 21:44:30",
        ],
        "Номер карты": ["*7197", "*7197", "*7197", "*5091", "*7197", "*7197", "*5091", "*7197", "*5091"],
        "Статус": ["OK", "OK", "OK", "OK", "OK", "OK", "OK", "OK", "OK"],
        "Сумма операции": [-99.00, -199.00, -99.22, -1.07, -15.00, -496.51, -5510.80, -125.00, -10.33],
        "Кэшбэк": [None, None, None, None, None, None, None, None, None],
        "Категория": [
            "Фастфуд",
            "Дом и ремонт",
            "Супермаркеты",
            "Каршеринг",
            "Связь",
            "Супермаркеты",
            "Каршеринг",
            "Фастфуд",
            "Каршеринг",
        ],
        "Описание": [
            "IP Yakubovskaya M.V.",
            "Строитель",
            "Дикси",
            "Ситидрайв",
            "Devajs Servis.",
            "Магнит",
            "Ситидрайв",
            "ЦЕХ",
            "Ситидрайв",
        ],
    }

    return pd.DataFrame(test)


@pytest.mark.parametrize(
    "category, date, expected",
    [
        (
            "Дом и ремонт",
            "02-12-2021 23:00:00",
            [
                {
                    "Категория": "Дом и ремонт",
                    "Расходы по категории": -199.00,
                    "Дата начала": "02-09-2021",
                    "Дата конца": "02-12-2021",
                },
            ],
        ),
        (
            "Фастфуд",
            "02-12-2021 23:00:00",
            [
                {
                    "Категория": "Фастфуд",
                    "Расходы по категории": -224.00,
                    "Дата начала": "02-09-2021",
                    "Дата конца": "02-12-2021",
                },
            ],
        ),
        ("Каршеринг", "", "По выбранной категории не было трат в заданный период"),
    ],
)
def test_spending_by_category(test_df, category, date, expected):
    """Положительный тест на сумму банковских операций по категории в заданный период,
    в том числе при отсутствии расходов в периоде"""
    assert list(spending_by_category(test_df, category, date)) == expected
